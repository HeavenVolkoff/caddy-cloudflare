name: Test

on: [push, merge_group, pull_request]

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if files have changed
        uses: dorny/paths-filter@v3
        continue-on-error: true
        id: filter
        with:
          filters: |
            changes:
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - 'Dockerfile'
              - 'example/Caddyfile'
              - '.github/workflows/ci.yaml'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: docker_build
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: false
          context: .

      - name: Run tests
        run: |
          set -euxo pipefail

          curl -sSfL https://raw.githubusercontent.com/eficode/wait-for/v2.1.0/wait-for -o wait-for
          chmod +x ./wait-for

          id="${{ steps.docker_build.outputs.imageid }}"
          url="http://127.0.0.1"
          caddyfile="$(pwd)/example/Caddyfile"

          docker run -d -p 8080:8080 -p 8081:8081 -p 8082:8082 -v "${caddyfile}:/etc/caddy/Caddyfile" "$id"

          ./wait-for "${url}:8080" -t 5

          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "${url}:8080")
          if [ "$status_code" -ne 200 ]; then
            echo "Expected HTTP status 200 but got $status_code"
            exit 1
          fi

          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "${url}:8081")
          if [ "$status_code" -ne 403 ]; then
            echo "Expected HTTP status 403 but got $status_code"
            exit 1
          fi

          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "${url}:8082")
          if [ "$status_code" -ne 403 ]; then
            echo "Expected HTTP status 403 but got $status_code"
            exit 1
          fi

          docker stop "$(docker ps --format '{{ .ID }}')"

          docker run -d -p 8080:8080 -p 8081:8081 -p 8082:8082 --add-host=api.cloudflare.com:0.0.0.0 -v "${caddyfile}:/etc/caddy/Caddyfile" "$id"

          ./wait-for "${url}:8080" -t 5

          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "${url}:8081")
          if [ "$status_code" -ne 403 ]; then
            echo "Expected HTTP status 403 but got $status_code"
            exit 1
          fi

          status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "${url}:8082")
          if [ "$status_code" -ne 200 ]; then
            echo "Expected HTTP status 200 but got $status_code"
            exit 1
          fi

          docker stop "$(docker ps --format '{{ .ID }}')"
